apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
  annotations:
    checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "postgres.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres.labels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: database
          envFrom:
            - configMapRef:
                name: {{ include "postgres.fullname" . }}-configmap
            - secretRef:
                name: {{ include "postgres.fullname" . }}-secret
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
  volumeClaimTemplates:
  - metadata:
      {{- range .Values.volumeMounts }}
      name: {{ .name }}
      {{- end }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          {{- range .Values.volumeClaimTemplate }}
          storage: {{ .storage }}
          {{- end }}