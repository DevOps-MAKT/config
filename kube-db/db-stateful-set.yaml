apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: booking
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: "postgres"
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: postgres
          image: postgres:15.0
          ports:
            - containerPort: 5432
              name: database
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_USER
                  optional: false
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
                  optional: false
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: db-configmap
                  key: USER_SERVICE_DB
            - name: POSTGRES_DB_2
              valueFrom:
                configMapKeyRef:
                  name: db-configmap
                  key: RESERVATION_SERVICE_DB
            - name: POSTGRES_DB_3
              valueFrom:
                configMapKeyRef:
                  name: db-configmap
                  key: ACCOMMODATION_SERVICE_DB

  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "standard"
        resources:
          requests:
            storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: booking
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
      name: postgres
  clusterIP: None
  selector:
    app: postgres