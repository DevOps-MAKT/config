apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: booking
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      name: user-service
      labels:
        app: user-service
    spec:
      initContainers:
        - name: init-database
          image: postgres:latest
          command: [ "bash", "-c", "createdb -h $POSTGRESQL_HOST -p 5432 -U $POSTGRES_USER $DB_NAME || true"]
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
                  optional: false
            - name: POSTGRESQL_HOST
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRESQL_HOST
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_USER
            - name: POSTGRESQL_MAIN_DB
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRESQL_MAIN_DB
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: db-names-configmap
                  key: USER_SERVICE_DB
      containers:
        - name: user-service
          image: katarinakomad/user-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
          env:
            # db values
            - name: POSTGRESQL_HOST
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRESQL_HOST
            - name: POSTGRESQL_PORT
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRESQL_PORT
            - name: POSTGRESQL_DB
              valueFrom:
                configMapKeyRef:
                  name: db-names-configmap
                  key: USER_SERVICE_DB
            - name: POSTGRESQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_USER
                  optional: false
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
                  optional: false
            # DB CONFIG
            - name: INIT_DATA_SCRIPT
              valueFrom:
                configMapKeyRef:
                  name: db-dev-configmap
                  key: INIT_DATA_SCRIPT
            - name: CREATE_DB_OPTION
              valueFrom:
                configMapKeyRef:
                  name: db-dev-configmap
                  key: CREATE_DB_OPTION
            - name: INIT_DATA_BOOL
              valueFrom:
                configMapKeyRef:
                  name: db-dev-configmap
                  key: INIT_DATA_BOOL
          # livenessProbe:
          #   httpGet:
          #     port: 8001
          #     path: /probe/liveness
          #   initialDelaySeconds: 3
          #   periodSeconds: 3
          # readinessProbe:
          #   httpGet:
          #     port: 8001
          #     path: /probe/readiness
          #   initialDelaySeconds: 3
          #   periodSeconds: 3
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: booking
spec:
  selector:
    app: user-service
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
